// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A basic math library.
 */
class Math {
	
	static Array twoToThe;
	
    /** Initializes the library. */
    function void init() {
		let twoToThe = Array.new(16);
		let twoToThe[0] = 1;
		let twoToThe[1] = 2;
		let twoToThe[2] = 4;
		let twoToThe[3] = 8;
		let twoToThe[4] = 16;
		let twoToThe[5] = 32;
		let twoToThe[6] = 64;
		let twoToThe[7] = 128;
		let twoToThe[8] = 256;
		let twoToThe[9] = 512;
		let twoToThe[10] = 1024;
		let twoToThe[11] = 2048;
		let twoToThe[12] = 4096;
		let twoToThe[13] = 8192;
		let twoToThe[14] = 16384;
		let twoToThe[15] = 16384 + 16384;
		return;
    }
	
	function int two_to_the(int power) {
		return twoToThe[power];
	}
	
	/** Returns true if the j'th bit of the integer x is 1, and false otherwise */
    function boolean bit(int x, int j) {
		return ~((x & twoToThe[j]) = 0);
    }
    
    /** Returns the absolute value of x. */
    function int abs(int x) {
		if (x < 0) {
			let x = -x;
		}
		return x;
    }

    /** Returns the product of x and y. */
    function int multiply(int x, int y) {
		var int j;
		var int sum;
		var int shiftedX;
		
		let j = 0;
		let sum = 0;
		let shiftedX = x;
		
		while (j < 16) { //each number is 16 bits
			if (Math.bit(y, j) = true) {
				let sum = sum + shiftedX;
			}
			let shiftedX = shiftedX + shiftedX;
			let j = j + 1;
		}
		return sum;
    }

    /** Returns the integer part of x/y. */
    function int divide(int x, int y) {
       var int q;
       var int result;
	   var int negX; 
	   var int negY;
        
        let negX = x < 0;
        let negY = y < 0;
        let x = Math.abs(x);
        let y = Math.abs(y);

        if(y > x) {
            return 0;
        }
        let q = Math.divide(x, y + y);
        if(x - (Math.multiply(q + q, y)) < y) {
            let result = q + q;
        }
        else {
            let result = q + q + 1;
        }
        
        if(negX = negY) {
            return result;
        }
        else {
            return -result;
        }
    }


    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
        var int result;
		var int j;
        var int checked;
        var int squared;
        
        let result = 0;
        let j = 7;
        while(~(j < 0)) {
            let checked = result + twoToThe[j];
            let squared = Math.multiply(checked, checked);
            if(~(squared > x) & (squared > 0)) {
                let result = checked;
            }
            let j = j - 1;
        }
        return result;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
		if (a > b) {
			return a;
		}
		else {
			return b;
		}
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
		if (a < b) {
			return a;
		}
		else {
			return b;
		}
    }
}
